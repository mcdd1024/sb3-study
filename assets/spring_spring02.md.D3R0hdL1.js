import{_ as a,c as e,o as t,a6 as o}from"./chunks/framework.BK3EmI1I.js";const m=JSON.parse('{"title":"夯实 IOC 容器","description":"","frontmatter":{},"headers":[],"relativePath":"spring/spring02.md","filePath":"spring/spring02.md","lastUpdated":1720547892000}'),i={name:"spring/spring02.md"},r=o('<h1 id="夯实-ioc-容器" tabindex="-1">夯实 IOC 容器 <a class="header-anchor" href="#夯实-ioc-容器" aria-label="Permalink to &quot;夯实 IOC 容器&quot;">​</a></h1><h1 id="一、ioc-概述" tabindex="-1">一、IOC 概述 <a class="header-anchor" href="#一、ioc-概述" aria-label="Permalink to &quot;一、IOC 概述&quot;">​</a></h1><h1 id="二、springboot-中常见的集中-ioc-容器" tabindex="-1">二、SpringBoot 中常见的集中 IOC 容器 <a class="header-anchor" href="#二、springboot-中常见的集中-ioc-容器" aria-label="Permalink to &quot;二、SpringBoot 中常见的集中 IOC 容器&quot;">​</a></h1><h2 id="_2-1-classpathxmlapplicationcontext" tabindex="-1">2.1 ClassPathXmlApplicationContext <a class="header-anchor" href="#_2-1-classpathxmlapplicationcontext" aria-label="Permalink to &quot;2.1 ClassPathXmlApplicationContext&quot;">​</a></h2><h2 id="_2-2-filesystemxmlapplicationcontext" tabindex="-1">2.2 FileSystemXmlApplicationContext <a class="header-anchor" href="#_2-2-filesystemxmlapplicationcontext" aria-label="Permalink to &quot;2.2 FileSystemXmlApplicationContext&quot;">​</a></h2><h2 id="_2-3-annotationconfigapplicationcontext" tabindex="-1">2.3 AnnotationConfigApplicationContext <a class="header-anchor" href="#_2-3-annotationconfigapplicationcontext" aria-label="Permalink to &quot;2.3 AnnotationConfigApplicationContext&quot;">​</a></h2><h1 id="三、装配-bean-的最佳实践" tabindex="-1">三、装配 Bean 的最佳实践 <a class="header-anchor" href="#三、装配-bean-的最佳实践" aria-label="Permalink to &quot;三、装配 Bean 的最佳实践&quot;">​</a></h1><h1 id="四、配置文件的管理和读取" tabindex="-1">四、配置文件的管理和读取 <a class="header-anchor" href="#四、配置文件的管理和读取" aria-label="Permalink to &quot;四、配置文件的管理和读取&quot;">​</a></h1><h2 id="_4-1-配置文件的基本使用" tabindex="-1">4.1 配置文件的基本使用 <a class="header-anchor" href="#_4-1-配置文件的基本使用" aria-label="Permalink to &quot;4.1 配置文件的基本使用&quot;">​</a></h2><h3 id="_4-1-1-通过-value" tabindex="-1">4.1.1 通过 @Value <a class="header-anchor" href="#_4-1-1-通过-value" aria-label="Permalink to &quot;4.1.1 通过 @Value&quot;">​</a></h3><h3 id="_4-1-2-通过-configurationproperties" tabindex="-1">4.1.2 通过 @ConfigurationProperties <a class="header-anchor" href="#_4-1-2-通过-configurationproperties" aria-label="Permalink to &quot;4.1.2 通过 @ConfigurationProperties&quot;">​</a></h3><h2 id="_4-2-读取项目中的配置文件" tabindex="-1">4.2 读取项目中的配置文件 <a class="header-anchor" href="#_4-2-读取项目中的配置文件" aria-label="Permalink to &quot;4.2 读取项目中的配置文件&quot;">​</a></h2><h3 id="_4-2-1-properties-文件的读取" tabindex="-1">4.2.1 properties 文件的读取 <a class="header-anchor" href="#_4-2-1-properties-文件的读取" aria-label="Permalink to &quot;4.2.1 properties 文件的读取&quot;">​</a></h3><h3 id="_4-2-2-yaml-文件的读取" tabindex="-1">4.2.2 yaml 文件的读取 <a class="header-anchor" href="#_4-2-2-yaml-文件的读取" aria-label="Permalink to &quot;4.2.2 yaml 文件的读取&quot;">​</a></h3><h3 id="_4-2-3-自定义配置文件的读取" tabindex="-1">4.2.3 自定义配置文件的读取 <a class="header-anchor" href="#_4-2-3-自定义配置文件的读取" aria-label="Permalink to &quot;4.2.3 自定义配置文件的读取&quot;">​</a></h3><h1 id="五、依赖注入" tabindex="-1">五、依赖注入 <a class="header-anchor" href="#五、依赖注入" aria-label="Permalink to &quot;五、依赖注入&quot;">​</a></h1><h1 id="六、条件装配" tabindex="-1">六、条件装配 <a class="header-anchor" href="#六、条件装配" aria-label="Permalink to &quot;六、条件装配&quot;">​</a></h1>',17),n=[r];function l(h,s,c,d,p,u){return t(),e("div",null,n)}const b=a(i,[["render",l]]);export{m as __pageData,b as default};
