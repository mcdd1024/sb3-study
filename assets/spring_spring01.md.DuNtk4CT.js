import{_ as a,c as i,o as e,a6 as o}from"./chunks/framework.BK3EmI1I.js";const g=JSON.parse('{"title":"开篇","description":"","frontmatter":{},"headers":[],"relativePath":"spring/spring01.md","filePath":"spring/spring01.md","lastUpdated":1720547892000}'),r={name:"spring/spring01.md"},t=o('<h1 id="开篇" tabindex="-1">开篇 <a class="header-anchor" href="#开篇" aria-label="Permalink to &quot;开篇&quot;">​</a></h1><div class="caution custom-block github-alert"><p class="custom-block-title">前置准备：</p><p>可参考 <a href="./../path-install.html">环境安装</a> 进行准备 （Windows）</p><ul><li>IDEA</li><li>JAVA、Maven、MySQL</li><li>Git</li></ul></div><h1 id="一、springboot-介绍" tabindex="-1">一、SpringBoot 介绍 <a class="header-anchor" href="#一、springboot-介绍" aria-label="Permalink to &quot;一、SpringBoot 介绍&quot;">​</a></h1><h2 id="_1-1-springboot-的特点" tabindex="-1">1.1 SpringBoot 的特点 <a class="header-anchor" href="#_1-1-springboot-的特点" aria-label="Permalink to &quot;1.1 SpringBoot 的特点&quot;">​</a></h2><h2 id="_1-2-springboot-版本" tabindex="-1">1.2 SpringBoot 版本 <a class="header-anchor" href="#_1-2-springboot-版本" aria-label="Permalink to &quot;1.2 SpringBoot 版本&quot;">​</a></h2><h1 id="二、项目创建" tabindex="-1">二、项目创建 <a class="header-anchor" href="#二、项目创建" aria-label="Permalink to &quot;二、项目创建&quot;">​</a></h1><h2 id="_2-1-通过-spring-initalizr-创建" tabindex="-1">2.1 通过 Spring Initalizr 创建 <a class="header-anchor" href="#_2-1-通过-spring-initalizr-创建" aria-label="Permalink to &quot;2.1 通过 Spring Initalizr 创建&quot;">​</a></h2><h2 id="_2-2-通过-aliyun-创建" tabindex="-1">2.2 通过 ALiyun 创建 <a class="header-anchor" href="#_2-2-通过-aliyun-创建" aria-label="Permalink to &quot;2.2 通过 ALiyun 创建&quot;">​</a></h2><h2 id="_2-3-通过-maven-构建" tabindex="-1">2.3 通过 Maven 构建 <a class="header-anchor" href="#_2-3-通过-maven-构建" aria-label="Permalink to &quot;2.3 通过 Maven 构建&quot;">​</a></h2><h2 id="_2-4-基本使用" tabindex="-1">2.4 基本使用 <a class="header-anchor" href="#_2-4-基本使用" aria-label="Permalink to &quot;2.4 基本使用&quot;">​</a></h2><h1 id="三、项目打包" tabindex="-1">三、项目打包 <a class="header-anchor" href="#三、项目打包" aria-label="Permalink to &quot;三、项目打包&quot;">​</a></h1><h2 id="_3-1-maven-compiler-plugin" tabindex="-1">3.1 maven-compiler-plugin <a class="header-anchor" href="#_3-1-maven-compiler-plugin" aria-label="Permalink to &quot;3.1 maven-compiler-plugin&quot;">​</a></h2><h2 id="_3-2-spring-boot-maven-plugin" tabindex="-1">3.2 spring-boot-maven-plugin <a class="header-anchor" href="#_3-2-spring-boot-maven-plugin" aria-label="Permalink to &quot;3.2 spring-boot-maven-plugin&quot;">​</a></h2><h1 id="四、springboot-依赖管理机制" tabindex="-1">四、SpringBoot 依赖管理机制 <a class="header-anchor" href="#四、springboot-依赖管理机制" aria-label="Permalink to &quot;四、SpringBoot 依赖管理机制&quot;">​</a></h1><h1 id="五、springboot-自动配置机制" tabindex="-1">五、SpringBoot 自动配置机制 <a class="header-anchor" href="#五、springboot-自动配置机制" aria-label="Permalink to &quot;五、SpringBoot 自动配置机制&quot;">​</a></h1>',15),n=[t];function l(s,h,p,d,c,u){return e(),i("div",null,n)}const _=a(r,[["render",l]]);export{g as __pageData,_ as default};
